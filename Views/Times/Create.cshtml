@model FinalProject.Areas.Identity.Data.TimeTable

@{
    ViewData["Title"] = "Create";
}

<h1>View</h1>

<h4>Time</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            <div class="form-group">
                <label asp-for="Clock_In" class="control-label"></label>
                <div>
                    <button type="button" id="clockInButton">Clock In</button>
                    <span id="clockInTime"></span>
                </div>
                <input id="clockInInput" asp-for="Clock_In" type="hidden" class="form-control" />
                <span asp-validation-for="Clock_In" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Clock_Out" class="control-label"></label>
                <div>
                    <button type="button" id="clockOutButton">Clock Out</button>
                    <span id="clockOutTime"></span>
                </div>
                <input id="clockOutInput" asp-for="Clock_Out" type="hidden" class="form-control" />
                <span asp-validation-for="Clock_Out" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const clockInButton = document.getElementById("clockInButton");
            const clockOutButton = document.getElementById("clockOutButton");
            const clockInTimeDisplay = document.getElementById("clockInTime");
            const clockOutTimeDisplay = document.getElementById("clockOutTime");
            const clockInInput = document.getElementById("clockInInput");
            const clockOutInput = document.getElementById("clockOutInput");

            clockInButton.addEventListener("click", function () {
                updateClockTime(clockInTimeDisplay, clockInInput);
            });

            clockOutButton.addEventListener("click", function () {
                updateClockTime(clockOutTimeDisplay, clockOutInput);
            });

            function updateClockTime(timeDisplay, timeInput) {
                const now = new Date();
                const formattedTime = formatTime(now);
                const formattedDate = formatDate(now);

                updateDisplay(timeDisplay, formattedTime);
                updateInput(timeInput, formattedDate, formattedTime);
            }

            function formatTime(date) {
                const hours = date.getHours().toString().padStart(2, "0");
                const minutes = date.getMinutes().toString().padStart(2, "0");
                return `${hours}:${minutes}`;
            }

            function formatDate(date) {
                const year = date.getFullYear();
                const month = (date.getMonth() + 1).toString().padStart(2, "0");
                const day = date.getDate().toString().padStart(2, "0");
                return `${year}-${month}-${day}`;
            }

            function updateDisplay(displayElement, time) {
                displayElement.textContent = "Time: " + time;
            }

            function updateInput(inputElement, date, time) {
                const dateTimeString = `${date}T${time}:00`;
                inputElement.value = dateTimeString;
            }
        });

    </script>
}
